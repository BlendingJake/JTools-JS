// Generated from src/grammar/JQL.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class JQLLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly PRIMITIVE = 4;
	public static readonly LPAREN = 5;
	public static readonly RPAREN = 6;
	public static readonly DOT = 7;
	public static readonly LBRACKET = 8;
	public static readonly RBRACKET = 9;
	public static readonly COMMA = 10;
	public static readonly LBRACE = 11;
	public static readonly RBRACE = 12;
	public static readonly SEMI = 13;
	public static readonly AT = 14;
	public static readonly DOLLAR = 15;
	public static readonly DIGITS = 16;
	public static readonly LETTERS = 17;
	public static readonly STRING = 18;
	public static readonly SPACE = 19;
	public static readonly WS = 20;
	public static readonly IDENTIFIER = 21;
	public static readonly LAST = 22;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "PRIMITIVE", "LPAREN", "RPAREN", "DOT", "LBRACKET", 
		"RBRACKET", "COMMA", "LBRACE", "RBRACE", "SEMI", "AT", "DOLLAR", "DIGITS", 
		"LETTERS", "STRING", "SPACE", "WS", "IDENTIFIER", "LAST",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'-'", "'+'", "'_'", undefined, "'('", "')'", "'.'", "'['", 
		"']'", "','", "'{'", "'}'", "':'", "'@'", "'$'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, "PRIMITIVE", "LPAREN", "RPAREN", 
		"DOT", "LBRACKET", "RBRACKET", "COMMA", "LBRACE", "RBRACE", "SEMI", "AT", 
		"DOLLAR", "DIGITS", "LETTERS", "STRING", "SPACE", "WS", "IDENTIFIER", 
		"LAST",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(JQLLexer._LITERAL_NAMES, JQLLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return JQLLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(JQLLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "JQL.g4"; }

	// @Override
	public get ruleNames(): string[] { return JQLLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return JQLLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return JQLLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return JQLLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x18\x84\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03" +
		"\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03" +
		"\x05\x03\x05\x05\x05C\n\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03" +
		"\b\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\x0E" +
		"\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11\x06\x11\\\n\x11\r\x11" +
		"\x0E\x11]\x03\x12\x06\x12a\n\x12\r\x12\x0E\x12b\x03\x13\x03\x13\x03\x13" +
		"\x03\x13\x07\x13i\n\x13\f\x13\x0E\x13l\v\x13\x03\x13\x03\x13\x03\x13\x03" +
		"\x13\x03\x13\x07\x13s\n\x13\f\x13\x0E\x13v\v\x13\x03\x13\x05\x13y\n\x13" +
		"\x03\x14\x03\x14\x03\x15\x03\x15\x05\x15\x7F\n\x15\x03\x16\x03\x16\x03" +
		"\x17\x03\x17\x02\x02\x02\x18\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02" +
		"\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02" +
		"\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%" +
		"\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18\x03\x02\n\x03\x022;\x04" +
		"\x02C\\c|\x03\x02$$\x03\x02))\x03\x02\"\"\x04\x02\v\f\x0E\x0F\x04\x02" +
		"**00\x03\x02\f\f\x02\x8D\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02" +
		"\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02" +
		"\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02" +
		"\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02" +
		"\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02" +
		"\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03" +
		"\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02" +
		"\x02\x02-\x03\x02\x02\x02\x03/\x03\x02\x02\x02\x051\x03\x02\x02\x02\x07" +
		"3\x03\x02\x02\x02\tB\x03\x02\x02\x02\vD\x03\x02\x02\x02\rF\x03\x02\x02" +
		"\x02\x0FH\x03\x02\x02\x02\x11J\x03\x02\x02\x02\x13L\x03\x02\x02\x02\x15" +
		"N\x03\x02\x02\x02\x17P\x03\x02\x02\x02\x19R\x03\x02\x02\x02\x1BT\x03\x02" +
		"\x02\x02\x1DV\x03\x02\x02\x02\x1FX\x03\x02\x02\x02![\x03\x02\x02\x02#" +
		"`\x03\x02\x02\x02%x\x03\x02\x02\x02\'z\x03\x02\x02\x02)~\x03\x02\x02\x02" +
		"+\x80\x03\x02\x02\x02-\x82\x03\x02\x02\x02/0\x07/\x02\x020\x04\x03\x02" +
		"\x02\x0212\x07-\x02\x022\x06\x03\x02\x02\x0234\x07a\x02\x024\b\x03\x02" +
		"\x02\x0256\x07v\x02\x0267\x07t\x02\x0278\x07w\x02\x028C\x07g\x02\x029" +
		":\x07h\x02\x02:;\x07c\x02\x02;<\x07n\x02\x02<=\x07u\x02\x02=C\x07g\x02" +
		"\x02>?\x07p\x02\x02?@\x07w\x02\x02@A\x07n\x02\x02AC\x07n\x02\x02B5\x03" +
		"\x02\x02\x02B9\x03\x02\x02\x02B>\x03\x02\x02\x02C\n\x03\x02\x02\x02DE" +
		"\x07*\x02\x02E\f\x03\x02\x02\x02FG\x07+\x02\x02G\x0E\x03\x02\x02\x02H" +
		"I\x070\x02\x02I\x10\x03\x02\x02\x02JK\x07]\x02\x02K\x12\x03\x02\x02\x02" +
		"LM\x07_\x02\x02M\x14\x03\x02\x02\x02NO\x07.\x02\x02O\x16\x03\x02\x02\x02" +
		"PQ\x07}\x02\x02Q\x18\x03\x02\x02\x02RS\x07\x7F\x02\x02S\x1A\x03\x02\x02" +
		"\x02TU\x07<\x02\x02U\x1C\x03\x02\x02\x02VW\x07B\x02\x02W\x1E\x03\x02\x02" +
		"\x02XY\x07&\x02\x02Y \x03\x02\x02\x02Z\\\t\x02\x02\x02[Z\x03\x02\x02\x02" +
		"\\]\x03\x02\x02\x02][\x03\x02\x02\x02]^\x03\x02\x02\x02^\"\x03\x02\x02" +
		"\x02_a\t\x03\x02\x02`_\x03\x02\x02\x02ab\x03\x02\x02\x02b`\x03\x02\x02" +
		"\x02bc\x03\x02\x02\x02c$\x03\x02\x02\x02dj\x07$\x02\x02ef\x07^\x02\x02" +
		"fi\x07$\x02\x02gi\n\x04\x02\x02he\x03\x02\x02\x02hg\x03\x02\x02\x02il" +
		"\x03\x02\x02\x02jh\x03\x02\x02\x02jk\x03\x02\x02\x02km\x03\x02\x02\x02" +
		"lj\x03\x02\x02\x02my\x07$\x02\x02nt\x07)\x02\x02op\x07^\x02\x02ps\x07" +
		")\x02\x02qs\n\x05\x02\x02ro\x03\x02\x02\x02rq\x03\x02\x02\x02sv\x03\x02" +
		"\x02\x02tr\x03\x02\x02\x02tu\x03\x02\x02\x02uw\x03\x02\x02\x02vt\x03\x02" +
		"\x02\x02wy\x07)\x02\x02xd\x03\x02\x02\x02xn\x03\x02\x02\x02y&\x03\x02" +
		"\x02\x02z{\t\x06\x02\x02{(\x03\x02\x02\x02|\x7F\x05\'\x14\x02}\x7F\t\x07" +
		"\x02\x02~|\x03\x02\x02\x02~}\x03\x02\x02\x02\x7F*\x03\x02\x02\x02\x80" +
		"\x81\n\b\x02\x02\x81,\x03\x02\x02\x02\x82\x83\n\t\x02\x02\x83.\x03\x02" +
		"\x02\x02\f\x02B]bhjrtx~\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!JQLLexer.__ATN) {
			JQLLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(JQLLexer._serializedATN));
		}

		return JQLLexer.__ATN;
	}

}

